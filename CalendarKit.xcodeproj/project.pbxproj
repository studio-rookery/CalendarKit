// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		"CalendarKit::CalendarKitPackageTests::ProductTarget" /* CalendarKitPackageTests */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = OBJ_59 /* Build configuration list for PBXAggregateTarget "CalendarKitPackageTests" */;
			buildPhases = (
			);
			dependencies = (
				OBJ_62 /* PBXTargetDependency */,
			);
			name = CalendarKitPackageTests;
			productName = CalendarKitPackageTests;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		OBJ_42 /* DateProvider.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_11 /* DateProvider.swift */; };
		OBJ_43 /* Day.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_12 /* Day.swift */; };
		OBJ_44 /* Date+Extension.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_14 /* Date+Extension.swift */; };
		OBJ_45 /* Int+Extension.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_15 /* Int+Extension.swift */; };
		OBJ_46 /* Month.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_16 /* Month.swift */; };
		OBJ_47 /* ReferenceDateStrideable.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_18 /* ReferenceDateStrideable.swift */; };
		OBJ_48 /* Region.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_19 /* Region.swift */; };
		OBJ_49 /* Weekday.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_20 /* Weekday.swift */; };
		OBJ_50 /* Year.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_21 /* Year.swift */; };
		OBJ_57 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_6 /* Package.swift */; };
		OBJ_68 /* DayTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_24 /* DayTests.swift */; };
		OBJ_69 /* Initializer.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_26 /* Initializer.swift */; };
		OBJ_70 /* Int+Extension.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_27 /* Int+Extension.swift */; };
		OBJ_71 /* Region+Extension.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_28 /* Region+Extension.swift */; };
		OBJ_72 /* IntTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_29 /* IntTests.swift */; };
		OBJ_73 /* RegionTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_30 /* RegionTests.swift */; };
		OBJ_74 /* WeekdayTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_31 /* WeekdayTests.swift */; };
		OBJ_75 /* XCTestManifests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_32 /* XCTestManifests.swift */; };
		OBJ_77 /* CalendarKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "CalendarKit::CalendarKit::Product" /* CalendarKit.framework */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		F452C73321EC80CD00ADFA1B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "CalendarKit::CalendarKit";
			remoteInfo = CalendarKit;
		};
		F452C73421EC80CE00ADFA1B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "CalendarKit::CalendarKitTests";
			remoteInfo = CalendarKitTests;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		"CalendarKit::CalendarKit::Product" /* CalendarKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; path = CalendarKit.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"CalendarKit::CalendarKitTests::Product" /* CalendarKitTests.xctest */ = {isa = PBXFileReference; lastKnownFileType = file; path = CalendarKitTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_11 /* DateProvider.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DateProvider.swift; sourceTree = "<group>"; };
		OBJ_12 /* Day.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Day.swift; sourceTree = "<group>"; };
		OBJ_14 /* Date+Extension.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "Date+Extension.swift"; sourceTree = "<group>"; };
		OBJ_15 /* Int+Extension.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "Int+Extension.swift"; sourceTree = "<group>"; };
		OBJ_16 /* Month.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Month.swift; sourceTree = "<group>"; };
		OBJ_18 /* ReferenceDateStrideable.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ReferenceDateStrideable.swift; sourceTree = "<group>"; };
		OBJ_19 /* Region.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Region.swift; sourceTree = "<group>"; };
		OBJ_20 /* Weekday.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Weekday.swift; sourceTree = "<group>"; };
		OBJ_21 /* Year.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Year.swift; sourceTree = "<group>"; };
		OBJ_24 /* DayTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DayTests.swift; sourceTree = "<group>"; };
		OBJ_26 /* Initializer.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Initializer.swift; sourceTree = "<group>"; };
		OBJ_27 /* Int+Extension.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "Int+Extension.swift"; sourceTree = "<group>"; };
		OBJ_28 /* Region+Extension.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "Region+Extension.swift"; sourceTree = "<group>"; };
		OBJ_29 /* IntTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IntTests.swift; sourceTree = "<group>"; };
		OBJ_30 /* RegionTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RegionTests.swift; sourceTree = "<group>"; };
		OBJ_31 /* WeekdayTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = WeekdayTests.swift; sourceTree = "<group>"; };
		OBJ_32 /* XCTestManifests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = XCTestManifests.swift; sourceTree = "<group>"; };
		OBJ_33 /* Configs */ = {isa = PBXFileReference; lastKnownFileType = folder; path = Configs; sourceTree = SOURCE_ROOT; };
		OBJ_6 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; path = Package.swift; sourceTree = "<group>"; };
		OBJ_8 /* Config.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; name = Config.xcconfig; path = Configs/Config.xcconfig; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		OBJ_51 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_76 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_77 /* CalendarKit.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		OBJ_10 /* CalendarKit */ = {
			isa = PBXGroup;
			children = (
				OBJ_11 /* DateProvider.swift */,
				OBJ_12 /* Day.swift */,
				OBJ_13 /* Extension */,
				OBJ_16 /* Month.swift */,
				OBJ_17 /* Protocol */,
				OBJ_19 /* Region.swift */,
				OBJ_20 /* Weekday.swift */,
				OBJ_21 /* Year.swift */,
			);
			name = CalendarKit;
			path = Sources/CalendarKit;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_13 /* Extension */ = {
			isa = PBXGroup;
			children = (
				OBJ_14 /* Date+Extension.swift */,
				OBJ_15 /* Int+Extension.swift */,
			);
			path = Extension;
			sourceTree = "<group>";
		};
		OBJ_17 /* Protocol */ = {
			isa = PBXGroup;
			children = (
				OBJ_18 /* ReferenceDateStrideable.swift */,
			);
			path = Protocol;
			sourceTree = "<group>";
		};
		OBJ_22 /* Tests */ = {
			isa = PBXGroup;
			children = (
				OBJ_23 /* CalendarKitTests */,
			);
			name = Tests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_23 /* CalendarKitTests */ = {
			isa = PBXGroup;
			children = (
				OBJ_24 /* DayTests.swift */,
				OBJ_25 /* Extension */,
				OBJ_29 /* IntTests.swift */,
				OBJ_30 /* RegionTests.swift */,
				OBJ_31 /* WeekdayTests.swift */,
				OBJ_32 /* XCTestManifests.swift */,
			);
			name = CalendarKitTests;
			path = Tests/CalendarKitTests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_25 /* Extension */ = {
			isa = PBXGroup;
			children = (
				OBJ_26 /* Initializer.swift */,
				OBJ_27 /* Int+Extension.swift */,
				OBJ_28 /* Region+Extension.swift */,
			);
			path = Extension;
			sourceTree = "<group>";
		};
		OBJ_34 /* Products */ = {
			isa = PBXGroup;
			children = (
				"CalendarKit::CalendarKit::Product" /* CalendarKit.framework */,
				"CalendarKit::CalendarKitTests::Product" /* CalendarKitTests.xctest */,
			);
			name = Products;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		OBJ_5 /*  */ = {
			isa = PBXGroup;
			children = (
				OBJ_6 /* Package.swift */,
				OBJ_7 /* Configs */,
				OBJ_9 /* Sources */,
				OBJ_22 /* Tests */,
				OBJ_33 /* Configs */,
				OBJ_34 /* Products */,
			);
			name = "";
			sourceTree = "<group>";
		};
		OBJ_7 /* Configs */ = {
			isa = PBXGroup;
			children = (
				OBJ_8 /* Config.xcconfig */,
			);
			name = Configs;
			sourceTree = "<group>";
		};
		OBJ_9 /* Sources */ = {
			isa = PBXGroup;
			children = (
				OBJ_10 /* CalendarKit */,
			);
			name = Sources;
			sourceTree = SOURCE_ROOT;
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		"CalendarKit::CalendarKit" /* CalendarKit */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_38 /* Build configuration list for PBXNativeTarget "CalendarKit" */;
			buildPhases = (
				OBJ_41 /* Sources */,
				OBJ_51 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = CalendarKit;
			productName = CalendarKit;
			productReference = "CalendarKit::CalendarKit::Product" /* CalendarKit.framework */;
			productType = "com.apple.product-type.framework";
		};
		"CalendarKit::CalendarKitTests" /* CalendarKitTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_64 /* Build configuration list for PBXNativeTarget "CalendarKitTests" */;
			buildPhases = (
				OBJ_67 /* Sources */,
				OBJ_76 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_78 /* PBXTargetDependency */,
			);
			name = CalendarKitTests;
			productName = CalendarKitTests;
			productReference = "CalendarKit::CalendarKitTests::Product" /* CalendarKitTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		"CalendarKit::SwiftPMPackageDescription" /* CalendarKitPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_53 /* Build configuration list for PBXNativeTarget "CalendarKitPackageDescription" */;
			buildPhases = (
				OBJ_56 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = CalendarKitPackageDescription;
			productName = CalendarKitPackageDescription;
			productType = "com.apple.product-type.framework";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		OBJ_1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 9999;
			};
			buildConfigurationList = OBJ_2 /* Build configuration list for PBXProject "CalendarKit" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = OBJ_5 /*  */;
			productRefGroup = OBJ_34 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				"CalendarKit::CalendarKit" /* CalendarKit */,
				"CalendarKit::SwiftPMPackageDescription" /* CalendarKitPackageDescription */,
				"CalendarKit::CalendarKitPackageTests::ProductTarget" /* CalendarKitPackageTests */,
				"CalendarKit::CalendarKitTests" /* CalendarKitTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		OBJ_41 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_42 /* DateProvider.swift in Sources */,
				OBJ_43 /* Day.swift in Sources */,
				OBJ_44 /* Date+Extension.swift in Sources */,
				OBJ_45 /* Int+Extension.swift in Sources */,
				OBJ_46 /* Month.swift in Sources */,
				OBJ_47 /* ReferenceDateStrideable.swift in Sources */,
				OBJ_48 /* Region.swift in Sources */,
				OBJ_49 /* Weekday.swift in Sources */,
				OBJ_50 /* Year.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_56 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_57 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_67 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_68 /* DayTests.swift in Sources */,
				OBJ_69 /* Initializer.swift in Sources */,
				OBJ_70 /* Int+Extension.swift in Sources */,
				OBJ_71 /* Region+Extension.swift in Sources */,
				OBJ_72 /* IntTests.swift in Sources */,
				OBJ_73 /* RegionTests.swift in Sources */,
				OBJ_74 /* WeekdayTests.swift in Sources */,
				OBJ_75 /* XCTestManifests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		OBJ_62 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "CalendarKit::CalendarKitTests" /* CalendarKitTests */;
			targetProxy = F452C73421EC80CE00ADFA1B /* PBXContainerItemProxy */;
		};
		OBJ_78 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "CalendarKit::CalendarKit" /* CalendarKit */;
			targetProxy = F452C73321EC80CD00ADFA1B /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		OBJ_3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_NS_ASSERTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "SWIFT_PACKAGE DEBUG";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				USE_HEADERMAP = NO;
			};
			name = Debug;
		};
		OBJ_39 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = OBJ_8 /* Config.xcconfig */;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = CalendarKit.xcodeproj/CalendarKit_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = CalendarKit;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 4.2;
				TARGET_NAME = CalendarKit;
			};
			name = Debug;
		};
		OBJ_4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_OPTIMIZATION_LEVEL = s;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				USE_HEADERMAP = NO;
			};
			name = Release;
		};
		OBJ_40 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = OBJ_8 /* Config.xcconfig */;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = CalendarKit.xcodeproj/CalendarKit_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = CalendarKit;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 4.2;
				TARGET_NAME = CalendarKit;
			};
			name = Release;
		};
		OBJ_54 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4.2 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4_2 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk";
				SWIFT_VERSION = 4.2;
			};
			name = Debug;
		};
		OBJ_55 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4.2 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4_2 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk";
				SWIFT_VERSION = 4.2;
			};
			name = Release;
		};
		OBJ_60 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Debug;
		};
		OBJ_61 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Release;
		};
		OBJ_65 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = OBJ_8 /* Config.xcconfig */;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = CalendarKit.xcodeproj/CalendarKitTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 4.2;
				TARGET_NAME = CalendarKitTests;
			};
			name = Debug;
		};
		OBJ_66 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = OBJ_8 /* Config.xcconfig */;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = CalendarKit.xcodeproj/CalendarKitTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 4.2;
				TARGET_NAME = CalendarKitTests;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		OBJ_2 /* Build configuration list for PBXProject "CalendarKit" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_3 /* Debug */,
				OBJ_4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_38 /* Build configuration list for PBXNativeTarget "CalendarKit" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_39 /* Debug */,
				OBJ_40 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_53 /* Build configuration list for PBXNativeTarget "CalendarKitPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_54 /* Debug */,
				OBJ_55 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_59 /* Build configuration list for PBXAggregateTarget "CalendarKitPackageTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_60 /* Debug */,
				OBJ_61 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_64 /* Build configuration list for PBXNativeTarget "CalendarKitTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_65 /* Debug */,
				OBJ_66 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = OBJ_1 /* Project object */;
}
